
if(NOT RISCV_TOOLCHAIN_PATH)
    if(NOT CMAKE_C_COMPILER)
        set(RISCV_TOOLCHAIN_PATH "/mnt/binaries/riscv32")
        message(STATUS "No RISCV_TOOLCHAIN_PATH specified, using default: " ${RISCV_TOOLCHAIN_PATH})
    else()
        # keep only directory of compiler
        get_filename_component(RISCV_TOOLCHAIN_PATH ${CMAKE_C_COMPILER} DIRECTORY)
        # remove the last /bin directory
        get_filename_component(RISCV_TOOLCHAIN_PATH ${RISCV_TOOLCHAIN_PATH} DIRECTORY)
    endif()
    file(TO_CMAKE_PATH "${RISCV_TOOLCHAIN_PATH}" RISCV_TOOLCHAIN_PATH)
endif()

if(NOT RISCV_TARGET_TRIPLET)
    set(RISCV_TARGET_TRIPLET "riscv32-unknown-elf")
    message(STATUS "No RISCV_TARGET_TRIPLET specified, using default: " ${RISCV_TARGET_TRIPLET})
endif()

set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR riscv)

set(TOOLCHAIN_SYSROOT  "${RISCV_TOOLCHAIN_PATH}/${RISCV_TARGET_TRIPLET}")
set(TOOLCHAIN_BIN_PATH "${RISCV_TOOLCHAIN_PATH}/bin")
set(TOOLCHAIN_INC_PATH "${RISCV_TOOLCHAIN_PATH}/${RISCV_TARGET_TRIPLET}/include")
set(TOOLCHAIN_LIB_PATH "${RISCV_TOOLCHAIN_PATH}/${RISCV_TARGET_TRIPLET}/lib")

find_program(CMAKE_OBJCOPY NAMES ${RISCV_TARGET_TRIPLET}-objcopy PATHS ${TOOLCHAIN_BIN_PATH} NO_DEFAULT_PATH)
find_program(CMAKE_OBJDUMP NAMES ${RISCV_TARGET_TRIPLET}-objdump PATHS ${TOOLCHAIN_BIN_PATH} NO_DEFAULT_PATH)
find_program(CMAKE_SIZE NAMES ${RISCV_TARGET_TRIPLET}-size PATHS ${TOOLCHAIN_BIN_PATH} NO_DEFAULT_PATH)
find_program(CMAKE_DEBUGGER NAMES ${RISCV_TARGET_TRIPLET}-gdb PATHS ${TOOLCHAIN_BIN_PATH} NO_DEFAULT_PATH)
find_program(CMAKE_CPPFILT NAMES ${RISCV_TARGET_TRIPLET}-c++filt PATHS ${TOOLCHAIN_BIN_PATH} NO_DEFAULT_PATH)

set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)
find_program(CMAKE_C_COMPILER NAMES ${RISCV_TARGET_TRIPLET}-gcc PATHS ${TOOLCHAIN_BIN_PATH})
find_program(CMAKE_CXX_COMPILER NAMES ${RISCV_TARGET_TRIPLET}-g++ PATHS ${TOOLCHAIN_BIN_PATH})
find_program(CMAKE_ASM_COMPILER NAMES ${RISCV_TARGET_TRIPLET}-gcc PATHS ${TOOLCHAIN_BIN_PATH})

set(CMAKE_EXECUTABLE_SUFFIX_C   .elf)
set(CMAKE_EXECUTABLE_SUFFIX_CXX .elf)
set(CMAKE_EXECUTABLE_SUFFIX_ASM .elf)